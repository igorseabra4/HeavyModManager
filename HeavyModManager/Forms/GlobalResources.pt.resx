<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="programName" xml:space="preserve">
    <value>Heavy Mod Manager</value>
  </data>
  <data name="updateAvailable" xml:space="preserve">
    <value>Há uma atualização disponível:</value>
  </data>
  <data name="updateAvailableTitle" xml:space="preserve">
    <value>Atualização Disponível</value>
  </data>
  <data name="confirmDeleteMod" xml:space="preserve">
    <value>Você tem certeza que quer remover o mod "{0}" por {1}?</value>
  </data>
  <data name="confirmDeleteModTitle" xml:space="preserve">
    <value>Remover mod</value>
  </data>
  <data name="developerMode" xml:space="preserve">
    <value>Modo Desenvolvedor</value>
  </data>
  <data name="dolphin" xml:space="preserve">
    <value>Dolphin</value>
  </data>
  <data name="dolphinNotFoundLabel" xml:space="preserve">
    <value>Executável Dolphin não encontrado no caminho definido.</value>
  </data>
  <data name="dolphinPathNotSetLabel" xml:space="preserve">
    <value>Caminho do executável do Dolphin não definido.</value>
  </data>
  <data name="dolphinPathNotSetTooltip" xml:space="preserve">
    <value>Caminho do executável do Dolphin não definido.

Clique em Configurações &gt; Escolher caminho do Dolphin... e selecione o executável do Dolphin. Também é possível selecionar um atalho.</value>
  </data>
  <data name="dolphinUserFolder" xml:space="preserve">
    <value>Pasta de usuário do Dolphin:</value>
  </data>
  <data name="dolphinUserFolderPathNotSetLabel" xml:space="preserve">
    <value>Caminho da pasta do usuário do Dolphin não definido.</value>
  </data>
  <data name="dolphinUserFolderPathNotSetTooltip" xml:space="preserve">
    <value>Caminho da pasta de usuário do Dolphin não definido.

Clique em Configurações &gt; Escolher Caminho da Pasta de Usuário do Dolphin... e selecione a pasta de usuário do Dolphin.
Ela geralmente está localizada em "AppData" (para instalações mais recentes) ou em "Documentos\Dolphin Emulator". Para encontrá-la, abra o Dolphin e selecione Arquivo &gt; Abrir Pasta de Usuário.</value>
  </data>
  <data name="dolphinUserPathNotFoundLabel" xml:space="preserve">
    <value>Pasta de usuário do Dolphin não encontrada no caminho definido.</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Erro</value>
  </data>
  <data name="errorCreatingModZip" xml:space="preserve">
    <value>Ocorreu um erro ao criar o arquivo ZIP do seu mod:</value>
  </data>
  <data name="isoOrMainDol" xml:space="preserve">
    <value>ISO ou main.dol</value>
  </data>
  <data name="noModsTooltip" xml:space="preserve">
    <value>Você não possui mods para este jogo.

Clique em "Adicionar Mods" e selecione um arquivo ZIP de mod.</value>
  </data>
  <data name="noBackupTooltip" xml:space="preserve">
    <value>Você não possui um backup para este jogo.

Clique em "Criar Backup" e selecione o arquivo ISO do jogo.</value>
  </data>
  <data name="unsupportedFiletype" xml:space="preserve">
    <value>Tipo de arquivo não suportado.</value>
  </data>
  <data name="downloadPrompt" xml:space="preserve">
    <value>Deseja realizar o download?</value>
  </data>
  <data name="errorCheckingForUpdates" xml:space="preserve">
    <value>Ocorreu um erro ao verificar atualizações:</value>
  </data>
  <data name="errorCheckingForUpdatesTitle" xml:space="preserve">
    <value>Erro ao verificar atualizações</value>
  </data>
  <data name="selectGameTitle" xml:space="preserve">
    <value>Selecione o ISO do seu jogo ou o main.dol de um dump do Dolphin inalterado.</value>
  </data>
  <data name="editMod" xml:space="preserve">
    <value>Editar mod</value>
  </data>
  <data name="iniErrorGameBackupNotFound" xml:space="preserve">
    <value>Não foi possível importar o arquivo INI: backup do jogo não encontrado. Crie um backup do arquivo ISO original do jogo.</value>
  </data>
  <data name="gameBackupNotFoundTitle" xml:space="preserve">
    <value>Backup do jogo não encontrado</value>
  </data>
  <data name="iniNotFound" xml:space="preserve">
    <value>Não foi possível importar INI: arquivo INI não encontrado em {0}</value>
  </data>
  <data name="iniNotFoundTitle" xml:space="preserve">
    <value>INI não encontrado nos arquivos</value>
  </data>
  <data name="modCreated" xml:space="preserve">
    <value>Mod criado</value>
  </data>
  <data name="modCreatedAt" xml:space="preserve">
    <value>Mod criado em</value>
  </data>
  <data name="modIdAlreadyExists" xml:space="preserve">
    <value>Não foi possível criar um mod: já existe um mod com o mesmo ID.</value>
  </data>
  <data name="modIdInfo" xml:space="preserve">
    <value>O ID do Mod é gerado automaticamente a partir do nome do jogo, autor e nome do mod.
Sinta-se à vontade para inserir seu próprio ID personalizado para o mod, mas certifique-se de que seja único!
Nenhum outro mod, de qualquer outro autor ou para qualquer outro jogo, deve ter o mesmo ID que o seu.
O ID do Mod não pode ser alterado após a criação do mod.</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Salvar</value>
  </data>
  <data name="unableToCreateMod" xml:space="preserve">
    <value>Não é possível criar o mod</value>
  </data>
  <data name="dolphinUserFolderNotFoundLabel" xml:space="preserve">
    <value>Pasta de usuário do Dolphin não encontrada no caminho definido.</value>
  </data>
  <data name="createModText" xml:space="preserve">
    <value>&amp;Criar mod...</value>
  </data>
  <data name="editModText" xml:space="preserve">
    <value>&amp;Editar mod...</value>
  </data>
  <data name="openModFolderText" xml:space="preserve">
    <value>&amp;Abrir pasta do mod...</value>
  </data>
  <data name="zipModText" xml:space="preserve">
    <value>Criar &amp;zip do mod...</value>
  </data>
  <data name="deleteModText" xml:space="preserve">
    <value>&amp;Remover mod...</value>
  </data>
  <data name="labelDefaultGameIdText" xml:space="preserve">
    <value>Game ID Padrão</value>
  </data>
  <data name="noUpdateAvailable" xml:space="preserve">
    <value>Nenhuma atualização disponível</value>
  </data>
</root>